--BasicQueries
--Description of all 'Local' brand products that cost less than $5
SELECT [Description]
FROM PRODUCTS
JOIN BRANDS ON BRANDS.BrandName = PRODUCTS.BrandName
WHERE(Price < 5.00) AND (BRANDS.BrandName = 'Local');

--Distributors that carry indicated UPC and price they charge us
SELECT PRODUCTS.UPC, DISTRIBUTORS.Name, DIST_PRODUCTS.WHCost
FROM PRODUCTS 
JOIN DIST_PRODUCTS
ON PRODUCTS.UPC = DIST_PRODUCTS.UPC
JOIN DISTRIBUTORS
ON DIST_PRODUCTS.DistID = DISTRIBUTORS.DistID
WHERE PRODUCTS.UPC = 36289367281;

--All in stock items certified Halal and Kosher
SELECT CERT_PRODUCTS.UPC, PRODUCTS.Description, CERT_PRODUCTS.CertName
FROM PRODUCTS
JOIN CERT_PRODUCTS ON PRODUCTS.UPC = CERT_PRODUCTS.UPC
JOIN LOCATION_PRODUCTS ON PRODUCTS.UPC = LOCATION_PRODUCTS.UPC
WHERE CERT_PRODUCTS.CertName = 'Halal' OR CERT_PRODUCTS.CertName = 'Kosher' AND (LOCATION_PRODUCTS.InBack > 0 OR LOCATION_PRODUCTS.OutFront > 0);

--All 'Made by hand' items
SELECT	PRODUCTS.Description
FROM	PRODUCTS
JOIN	TAGGED_PRODUCTS ON PRODUCTS.UPC = TAGGED_PRODUCTS.UPC
JOIN	TAGS ON TAGGED_PRODUCTS.TagName = TAGS.TagName
WHERE	TAGS.TagName = 'Made by hand';

--How much each maker owes us for unpaid coupons
SELECT	MAKERS.MakerName, SUM(COUPONS.AmountSaved) as 'Owes'
FROM	COUPONS
JOIN	ORDERED_PRODUCTS ON COUPONS.CouponID = ORDERED_PRODUCTS.CouponID
JOIN	PRODUCTS ON ORDERED_PRODUCTS.UPC = PRODUCTS.UPC
JOIN	BRANDS ON PRODUCTS.BrandName = BRANDS.BrandName
JOIN	MAKERS ON BRANDS.MakerName = MAKERS.MakerName
WHERE	ORDERED_PRODUCTS.CouponPaid = 'n'
GROUP BY MAKERS.MakerName;

--Payment methods we have for designated customer
SELECT	CUSTOMERS.Fname, CUSTOMERS.Lname, ORDERS.PaymentType
FROM	CUSTOMERS
JOIN	ORDERS
ON		CUSTOMERS.MemberID = ORDERS.MemberID
WHERE	CUSTOMERS.Fname = 'Megan' AND CUSTOMERS.Lname = 'Brown';

--HarderQueries
		--items in back that are not outfront
		SELECT	PRODUCTS.UPC
		FROM	PRODUCTS
		JOIN	LOCATION_PRODUCTS ON PRODUCTS.UPC = LOCATION_PRODUCTS.UPC
		WHERE	InBack > 0 AND OutFront = 0;

		--product located in the most places in the store
		--run the first query to find the Max# of locations
		SELECT MAX(y.Loc) as 'MaxLocations'
		FROM(
		SELECT	PRODUCTS.UPC, PRODUCTS.Description, (COUNT(LOCATION_PRODUCTS.LocationName)) as 'Loc'
		FROM	PRODUCTS
		JOIN	LOCATION_PRODUCTS ON PRODUCTS.UPC = LOCATION_PRODUCTS.UPC
		GROUP BY PRODUCTS.UPC, PRODUCTS.Description) y;
		
		--substitute '4' based off result of query above
		SELECT	PRODUCTS.UPC, PRODUCTS.Description
		FROM	PRODUCTS
		JOIN	LOCATION_PRODUCTS ON PRODUCTS.UPC = LOCATION_PRODUCTS.UPC
		GROUP BY PRODUCTS.UPC, PRODUCTS.Description
		HAVING (COUNT(LOCATION_PRODUCTS.LocationName) = 4);

		--all Product descriptions and Dates of Purchase by designated MemberID
		SELECT	PRODUCTS.Description, ORDERS.OrderDate
		FROM	PRODUCTS
		JOIN	ORDERED_PRODUCTS ON PRODUCTS.UPC = ORDERED_PRODUCTS.UPC
		JOIN	ORDERS ON ORDERED_PRODUCTS.OrderID = ORDERS.OrderID
		WHERE	ORDERS.MemberID = 2;
		
		--description and UPC for all products with less than minOrderCount in stock
		SELECT 	PRODUCTS.Description, PRODUCTS.UPC, PRODUCTS.MinOrderCount, (LOCATION_PRODUCTS.OutFront + LOCATION_PRODUCTS.InBack) AS 'InStock'
		FROM 	PRODUCTS
		JOIN	LOCATION_PRODUCTS ON PRODUCTS.UPC = LOCATION_PRODUCTS.UPC
		WHERE	PRODUCTS.MinOrderCount > (LOCATION_PRODUCTS.OutFront + LOCATION_PRODUCTS.InBack);
 
		--All customers who purchased a 'Local' brand product and the product description
		SELECT	ORDERS.MemberID, PRODUCTS.Description
		FROM	PRODUCTS
		JOIN	BRANDS ON BRANDS.BrandName = PRODUCTS.BrandName
		JOIN	ORDERED_PRODUCTS ON PRODUCTS.UPC = ORDERED_PRODUCTS.UPC
		JOIN	ORDERS ON ORDERED_PRODUCTS.OrderID = ORDERS.OrderID
		WHERE	BRANDS.BrandName = 'Local'
		ORDER BY ORDERS.MemberID ASC;
		
		--Total number of products ordered by a designated customer
		SELECT	CUSTOMERS.MemberID, (SUM(ORDERED_PRODUCTS.Quantity)) as 'ProductsPurchased'
		FROM	ORDERED_PRODUCTS
		JOIN	ORDERS ON ORDERS.OrderID = ORDERED_PRODUCTS.OrderID
		JOIN	CUSTOMERs ON ORDERS.MemberID = CUSTOMERS.MemberID
		WHERE CUSTOMERS.MemberID = 1
		GROUP BY CUSTOMERS.MemberID;
		
		--Customer who has made the most orders and the total amount they've spent
 		SELECT	DISTINCT CUSTOMERS.MemberID, (ORDERED_PRODUCTS.Quantity * PRODUCTS.Price) as 'TotalSpent'
		FROM 	CUSTOMERS
		JOIN	ORDERS ON CUSTOMERS.MemberID = ORDERS.MemberID
		JOIN	ORDERED_PRODUCTS ON ORDERED_PRODUCTS.OrderID = ORDERS.OrderID
		JOIN	PRODUCTS ON PRODUCTS.UPC = ORDERED_PRODUCTS.UPC
		GROUP BY CUSTOMERS.MemberID, ORDERED_PRODUCTS.Quantity, PRODUCTS.Price

--ExtraQueries
--Number of products ordered by each customer and their email address
SELECT	CUSTOMERS.Email, (SUM(ORDERED_PRODUCTS.Quantity)) as 'ProductsPurchased'
FROM	ORDERED_PRODUCTS
JOIN	ORDERS ON ORDERS.OrderID = ORDERED_PRODUCTS.OrderID
JOIN	CUSTOMERS ON ORDERS.MemberID = CUSTOMERS.MemberID
GROUP BY CUSTOMERS.Email
ORDER BY ProductsPurchased DESC;
	
--Description of each product with a wholesale cost less than $5 and their Distributor		
SELECT		DISTRIBUTORS.Name, PRODUCTS.Description, DIST_PRODUCTS.WHCost
FROM		PRODUCTS
JOIN		DIST_PRODUCTS ON PRODUCTS.UPC = DIST_PRODUCTS.UPC
JOIN		DISTRIBUTORS ON	DIST_PRODUCTS.DistID = DISTRIBUTORS.DistID
WHERE		WHCost < 5
ORDER BY	DISTRIBUTORS.Name;

--Description of each product with a price greater than $5 along with their Maker and Maker's Address
SELECT 		PRODUCTS.Description, PRODUCTS.Price, MAKERS.MakerName, MAKERS.Address
FROM		PRODUCTS
JOIN		BRANDS ON PRODUCTS.BrandName = BRANDS.BrandName
JOIN		MAKERS ON MAKERS.MakerName = BRANDS.MakerName
WHERE 		PRODUCTS.Price > 5;

